/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelmanagementsystem;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JTextField;
import java.sql.*;
import pj.*;
import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;

/**
 *
 * @author Bagaskara
 */
public class userCheckout extends javax.swing.JFrame {

    /**
     * Creates new form userCheckout
     */
    public userCheckout() {
        initComponents();

        jTextName.setEditable(false);
        jTextCheckinDate.setEditable(false);
        jTextCheckoutDate.setEditable(false);
        jTextPhoneNumber.setEditable(false);
        jTextPricePerDay.setEditable(false);
        jTextDays.setEditable(false);
        jTextTotal.setEditable(false);
        jTextEmail.setEditable(false);
    }

    int id = 0;
    String Query;
    String roomType;
    String bed;
    String roomNo;

    @Override
    public boolean isEnabled() {
        return super.isEnabled(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextRoomNumber = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextCheckinDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextCheckoutDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextPhoneNumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextPricePerDay = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextDays = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextTotal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextEmail = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnCheckout = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1370, 770));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1370, 770));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Poppins Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Checkout&Payment.png"))); // NOI18N
        jLabel1.setText(" CHECKOUT");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1208, 23, -1, -1));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Mobile Number", "Gender", "Email", "ID Proof", "Address", "Check-in Date", "Room Number", "Bed", "Room Type", "Price Per Day"
            }
        ));
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTable1ComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 1190, 200));

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Room Number");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 80, 110, -1));

        jTextRoomNumber.setBackground(new java.awt.Color(255, 255, 255));
        jTextRoomNumber.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTextRoomNumber.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jTextRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, 180, -1));

        btnCari.setBackground(new java.awt.Color(255, 255, 255));
        btnCari.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnCari.setForeground(new java.awt.Color(0, 0, 0));
        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        getContentPane().add(btnCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        jTextName.setBackground(new java.awt.Color(255, 255, 255));
        jTextName.setFont(new java.awt.Font("Poppins Black", 1, 12)); // NOI18N
        jTextName.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jTextName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 230, -1));

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Check In Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, -1, -1));

        jTextCheckinDate.setEditable(false);
        jTextCheckinDate.setBackground(new java.awt.Color(255, 255, 255));
        jTextCheckinDate.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        jTextCheckinDate.setForeground(new java.awt.Color(0, 0, 0));
        jTextCheckinDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCheckinDateActionPerformed(evt);
            }
        });
        getContentPane().add(jTextCheckinDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 180, 230, -1));

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Check Out Date (Today)");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, 160, -1));

        jTextCheckoutDate.setBackground(new java.awt.Color(255, 255, 255));
        jTextCheckoutDate.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTextCheckoutDate.setForeground(new java.awt.Color(0, 0, 0));
        jTextCheckoutDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCheckoutDateActionPerformed(evt);
            }
        });
        getContentPane().add(jTextCheckoutDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, 230, -1));

        jLabel6.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Phone Number");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 150, -1, -1));

        jTextPhoneNumber.setBackground(new java.awt.Color(255, 255, 255));
        jTextPhoneNumber.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTextPhoneNumber.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jTextPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 180, 230, -1));

        jLabel7.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Price Per Day");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        jTextPricePerDay.setBackground(new java.awt.Color(255, 255, 255));
        jTextPricePerDay.setFont(new java.awt.Font("Poppins Black", 0, 12)); // NOI18N
        jTextPricePerDay.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jTextPricePerDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 230, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Number of Days Stay");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 160, -1));

        jTextDays.setBackground(new java.awt.Color(255, 255, 255));
        jTextDays.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTextDays.setForeground(new java.awt.Color(0, 0, 0));
        jTextDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDaysActionPerformed(evt);
            }
        });
        getContentPane().add(jTextDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, 230, -1));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Total Amount");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, -1, -1));

        jTextTotal.setBackground(new java.awt.Color(255, 255, 255));
        jTextTotal.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTextTotal.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jTextTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, 230, -1));

        jLabel10.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Email");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 250, 40, -1));

        jTextEmail.setBackground(new java.awt.Color(255, 255, 255));
        jTextEmail.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jTextEmail.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jTextEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 280, 230, -1));

        btnClear.setBackground(new java.awt.Color(255, 255, 255));
        btnClear.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnClear.setForeground(new java.awt.Color(0, 0, 0));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, -1, -1));

        btnCheckout.setBackground(new java.awt.Color(255, 255, 255));
        btnCheckout.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnCheckout.setForeground(new java.awt.Color(0, 0, 0));
        btnCheckout.setText("Check-Out");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });
        getContentPane().add(btnCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        jLabel13.setFont(new java.awt.Font("Poppins Black", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bgHome.png"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        String roomNumber = jTextRoomNumber.getText();

        if (roomNumber.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Room number cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String query = "SELECT * FROM reserve WHERE room_number = ? AND checkout IS NULL";

        try (Connection conn = connector.connection(); // Using try-with-resources
                 PreparedStatement pst = conn.prepareStatement(query)) {

            if (conn == null || conn.isClosed()) {
                JOptionPane.showMessageDialog(this, "Koneksi ditutup", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            pst.setString(1, roomNumber);
            ResultSet rs = pst.executeQuery();

            if (rs != null && rs.next()) {
                jTextRoomNumber.setEditable(false);
                id = rs.getInt("id_reserve");
                jTextName.setText(rs.getString("name"));
                jTextCheckinDate.setText(rs.getString("checkin_date"));
                jTextPhoneNumber.setText(rs.getString("phone_number"));
                jTextPricePerDay.setText(rs.getString("price"));
                jTextEmail.setText(rs.getString("email"));

                String checkinDateString = rs.getString("checkin_date");
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                LocalDate checkinDate = LocalDate.parse(checkinDateString, formatter);

                LocalDate today = LocalDate.now();
                long daysStayed = ChronoUnit.DAYS.between(checkinDate, today);

                // If check-in and checkout are the same day, set daysStayed to 1
                if (daysStayed == 0) {
                    daysStayed = 1;
                }

                jTextDays.setText(String.valueOf(daysStayed));

                String checkoutDate = LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
                jTextCheckoutDate.setText(checkoutDate);

                double pricePerDay = Double.parseDouble(jTextPricePerDay.getText());
                int daysStay = Integer.parseInt(jTextDays.getText());
                double totalAmount = pricePerDay * daysStay;
                jTextTotal.setText(String.valueOf(totalAmount));

            } else {
                JOptionPane.showMessageDialog(this, "Tidak ada reservasi aktif ditemukan untuk ruangan ini", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Kesalahan saat mengambil data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void jTextCheckoutDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCheckoutDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCheckoutDateActionPerformed

    private void jTextCheckinDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCheckinDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextCheckinDateActionPerformed

    private void jTextDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDaysActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        jTextRoomNumber.setEditable(true);
        jTextRoomNumber.setText("");
        jTextName.setText("");
        jTextCheckinDate.setText("");
        jTextCheckoutDate.setText("");
        jTextPhoneNumber.setText("");
        jTextPricePerDay.setText("");
        jTextDays.setText("");
        jTextTotal.setText("");
        jTextEmail.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        String query = "SELECT * FROM reserve WHERE checkout IS NULL";

        try {
            // Ambil data dari database menggunakan ceklog.getData
            ResultSet rs = ceklog.getData(query);

            // Cek apakah ResultSet tidak kosong
            if (rs != null) {
                // Dapatkan model dari jTable1 untuk menambahkan data
                javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) jTable1.getModel();

                // Hapus semua data lama (opsional, jika ingin menampilkan data terbaru setiap kali form dibuka)
                model.setRowCount(0);

                // Loop untuk mengisi data dari ResultSet ke tabel
                while (rs.next()) {
                    // Menambahkan data dari ResultSet ke dalam baris tabel
                    model.addRow(new Object[]{
                        rs.getInt("id_reserve"), // ID
                        rs.getString("name"), // Name
                        rs.getString("phone_number"), // Phone Number
                        rs.getString("gender"), // Gender
                        rs.getString("email"), // Email
                        rs.getString("id_proof"), // ID Proof
                        rs.getString("address"), // Address
                        rs.getString("checkin_date"), // Check-in Date
                        rs.getString("room_number"), // Room Number
                        rs.getString("bed_size"), // Bed Size
                        rs.getString("room_type"), // Room Type
                        rs.getDouble("price") // Price Per Day
                    });
                }
                rs.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Kesalahan saat mengambil data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formComponentShown

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
        // TODO add your handling code here:
        String roomNumber = jTextRoomNumber.getText();
        String checkoutDate = jTextCheckoutDate.getText();
        String totalDaysText = jTextDays.getText();
        String totalAmountText = jTextTotal.getText();

        // Validasi jika data belum lengkap
        if (roomNumber.isEmpty() || checkoutDate.isEmpty() || totalDaysText.isEmpty() || totalAmountText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan isi semua kolom sebelum melanjutkan.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Ambil data yang diperlukan
            int totalDays = Integer.parseInt(totalDaysText);
            double totalAmount = Double.parseDouble(totalAmountText);

            // Query untuk update data checkout
            String updateReserveQuery = "UPDATE reserve SET checkout = ?, total_day = ?, total_amount = ? WHERE room_number = ? AND checkout IS NULL";

            // Query untuk update status room menjadi "not booked"
            String updateRoomStatusQuery = "UPDATE room SET status = 'Not booked' WHERE room_number = ?";

            // Siapkan koneksi dan statement menggunakan connector.connection()
            try (Connection conn = connector.connection(); PreparedStatement pstReserve = conn.prepareStatement(updateReserveQuery); PreparedStatement pstRoom = conn.prepareStatement(updateRoomStatusQuery)) {

                // Set parameter query untuk update tabel reserve
                pstReserve.setString(1, checkoutDate);  // Set tanggal checkout
                pstReserve.setInt(2, totalDays);  // Set total hari
                pstReserve.setDouble(3, totalAmount);  // Set total amount
                pstReserve.setString(4, roomNumber);  // Set nomor kamar

                // Eksekusi query untuk memperbarui data reservasi
                int affectedRowsReserve = pstReserve.executeUpdate();

                // Set parameter query untuk update tabel room
                pstRoom.setString(1, roomNumber);  // Set nomor kamar untuk update status

                // Eksekusi query untuk memperbarui status kamar
                int affectedRowsRoom = pstRoom.executeUpdate();

                if (affectedRowsReserve > 0 && affectedRowsRoom > 0) {
                    JOptionPane.showMessageDialog(this, "Checkout Berhasil! Status kamar diperbarui.", "Berhasil", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Checkout gagal. Silakan coba lagi", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Input tidak valid untuk total hari atau total jumlah.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void jTable1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1ComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userCheckout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userCheckout().setVisible(true);
            }
        });
    }

    public JButton getBtnCari() {
        return btnCari;
    }

    public void setBtnCari(JButton btnCari) {
        this.btnCari = btnCari;
    }

    public JButton getBtnCheckout() {
        return btnCheckout;
    }

    public void setBtnCheckout(JButton btnCheckout) {
        this.btnCheckout = btnCheckout;
    }

    public JButton getBtnClear() {
        return btnClear;
    }

    public void setBtnClear(JButton btnClear) {
        this.btnClear = btnClear;
    }

    public JButton getBtnClose() {
        return btnClose;
    }

    public void setBtnClose(JButton btnClose) {
        this.btnClose = btnClose;
    }

    public JTable getjTable1() {
        return jTable1;
    }

    public void setjTable1(JTable jTable1) {
        this.jTable1 = jTable1;
    }

    public JTextField getjTextCheckinDate() {
        return jTextCheckinDate;
    }

    public void setjTextCheckinDate(JTextField jTextCheckinDate) {
        this.jTextCheckinDate = jTextCheckinDate;
    }

    public JTextField getjTextCheckoutDate() {
        return jTextCheckoutDate;
    }

    public void setjTextCheckoutDate(JTextField jTextCheckoutDate) {
        this.jTextCheckoutDate = jTextCheckoutDate;
    }

    public JTextField getjTextDays() {
        return jTextDays;
    }

    public void setjTextDays(JTextField jTextDays) {
        this.jTextDays = jTextDays;
    }

    public JTextField getjTextEmail() {
        return jTextEmail;
    }

    public void setjTextEmail(JTextField jTextEmail) {
        this.jTextEmail = jTextEmail;
    }

    public JTextField getjTextName() {
        return jTextName;
    }

    public void setjTextName(JTextField jTextName) {
        this.jTextName = jTextName;
    }

    public JTextField getjTextPhoneNumber() {
        return jTextPhoneNumber;
    }

    public void setjTextPhoneNumber(JTextField jTextPhoneNumber) {
        this.jTextPhoneNumber = jTextPhoneNumber;
    }

    public JTextField getjTextPricePerDay() {
        return jTextPricePerDay;
    }

    public void setjTextPricePerDay(JTextField jTextPricePerDay) {
        this.jTextPricePerDay = jTextPricePerDay;
    }

    public JTextField getjTextRoomNumber() {
        return jTextRoomNumber;
    }

    public void setjTextRoomNumber(JTextField jTextRoomNumber) {
        this.jTextRoomNumber = jTextRoomNumber;
    }

    public JTextField getjTextTotal() {
        return jTextTotal;
    }

    public void setjTextTotal(JTextField jTextTotal) {
        this.jTextTotal = jTextTotal;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextCheckinDate;
    private javax.swing.JTextField jTextCheckoutDate;
    private javax.swing.JTextField jTextDays;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextPhoneNumber;
    private javax.swing.JTextField jTextPricePerDay;
    private javax.swing.JTextField jTextRoomNumber;
    private javax.swing.JTextField jTextTotal;
    // End of variables declaration//GEN-END:variables
}
